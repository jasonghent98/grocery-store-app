FROM node:16-alpine AS deps
ENV NODE_ENV=production

RUN apk add --no-cache libc6-compat

WORKDIR /app

COPY package.json yarn.lock ./
# ensures the exact version installed in package-lock
RUN yarn install --frozen-lockfile 




#rebuild the source code only when needed
FROM node:16-alpine AS builder

ENV NODE_ENV=production

# define working dir
WORKDIR /app

# copy the necessary files 
COPY next.config.js ./
COPY package.json yarn.lock ./
COPY --from=deps /app/node_modules ./node_modules

# source code
# COPY pages ./pages
# COPY public ./public
# COPY styles ./styles
COPY . . 

RUN yarn run build



# this is the production image.. copy all files and run next
FROM node:16-alpine AS runner

WORKDIR /app

ENV NODE_ENV=production

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /app/public ./public

COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

CMD ["node", "server.js"]