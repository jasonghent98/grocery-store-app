import type { NextPage } from 'next'
import SearchForProducts from '../components/SearchForProducts'
import Navbar from '../components/Navbar'
import { useSelector } from 'react-redux'
import { RootState } from '../redux/store'
import { useEffect } from 'react'
import { setCookie } from 'cookies-next'
import type { NextApiRequest, NextApiResponse } from 'next'
import Head from 'next/head'

// users can access this page if they are logged in
const Home: NextPage = () => {
  const user = useSelector((state: RootState) => state.userManagementState.user)
  
  // set cookie on client browser
  useEffect(() => {
    setCookie('login', 'login')
  }, [user.uid])


  return (
    <div className='flex flex-col justify-center items-center bg-gray-300 h-screen'>
      <Head>
        <title>Home</title>
      </Head>
      <Navbar/> 
        
      {/* <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head> */}
      <div className="flex flex-row justify-center items-center h-5/6 w-screen">
          <SearchForProducts/> 
      </div>
    </div>
  )
}


export async function getServerSideProps ({req, res}: {req: NextApiRequest, res: NextApiResponse}) {
  if(res) {
    console.log(res)
    res.writeHead(307, {Location: "/login"})
    res.end()
  } else {
    window.location.href = '/login'
    // While the page is loading, code execution will
    // continue, so we'll await a never-resolving
    // promise to make sure our page never
    // gets rendered.
    await new Promise((resolve) => {})
  }

  return {
    props: {}
  }
}

export default Home
